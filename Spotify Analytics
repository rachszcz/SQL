# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL.

#What is the average danceability by artist? 
SELECT AVG(danceability), artist_name FROM BIT_DB.Spotifydata 
GROUP By artist_name;

#Who are the top 10 artist based on popularity?
SELECT artist_name, popularity FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10;

#What artist released the longest song?
SELECT artist_name, duration_ms FROM BIT_DB.Spotifydata
ORDER BY duration_ms DESC
LIMIT 1;

#What was the most popular song with the danceability less than 0.5?
SELECT track_name, popularity, danceability FROM BIT_DB.Spotifydata
WHERE danceability < 0.5
ORDER BY popularity DESC
LIMIT 1;

#Which artists have more than 1 song on the chart?
SELECT artist_name, COUNT(track_name) AS song_count FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING song_count >1
ORDER BY song_count DESC;

#What is the average energy of the top 12 songs?
SELECT AVG(energy) FROM (
SELECT energy FROM BIT_DB.Spotifydata
GROUP BY track_name
ORDER BY popularity DESC
LIMIT 12 ); 

#Calculate the average popularity for the artists in the Spotify data table. 
#Then, for every artist with an average popularity of 90 or above, show their name, 
#their average popularity, and label them as a “Top Star”
WITH popularity_average_CTE AS (
SELECT s.artist_name,
AVG(s.popularity) AS average_popularity
FROM Spotifydata s
GROUP BY s.artist_name
)

SELECT artist_name,
        average_popularity,
        'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity>=90;
